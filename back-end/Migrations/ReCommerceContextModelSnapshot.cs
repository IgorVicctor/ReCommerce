// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ReCommerce.Dados;

namespace ReCommerce.Migrations
{
    [DbContext(typeof(ReCommerceContext))]
    partial class ReCommerceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ReCommerce.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Bairro")
                        .HasColumnType("text");

                    b.Property<int>("CEP")
                        .HasColumnType("integer");

                    b.Property<string>("Cidade")
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .HasColumnType("text");

                    b.Property<int>("Residencia")
                        .HasColumnType("integer");

                    b.Property<string>("Rua")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("ReCommerce.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("marca")
                        .HasColumnType("text");

                    b.Property<string>("nome")
                        .HasColumnType("text");

                    b.Property<double>("preco")
                        .HasColumnType("double precision");

                    b.Property<int>("qtdEstoque")
                        .HasColumnType("integer");

                    b.Property<double>("tempoDeUso")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("ReCommerce.Models.Troca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("ProdutoId")
                        .HasColumnType("integer");

                    b.Property<int>("ProdutosUsuarioDoisId")
                        .HasColumnType("integer");

                    b.Property<int>("ProdutosUsuarioUmId")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioDoisId")
                        .HasColumnType("integer");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioUmId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("dia")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("status")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("ProdutosUsuarioDoisId")
                        .IsUnique();

                    b.HasIndex("ProdutosUsuarioUmId")
                        .IsUnique();

                    b.HasIndex("UsuarioDoisId");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("UsuarioUmId");

                    b.ToTable("Troca");
                });

            modelBuilder.Entity("ReCommerce.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("Senha")
                        .HasColumnType("text");

                    b.Property<int>("Telefone")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("ReCommerce.Models.UsuarioEndereco", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("integer");

                    b.HasKey("UsuarioId", "EnderecoId");

                    b.HasIndex("EnderecoId");

                    b.ToTable("UsuarioEndereco");
                });

            modelBuilder.Entity("ReCommerce.Models.UsuarioProduto", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer");

                    b.HasKey("UsuarioId", "ProdutoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("UsuarioProduto");
                });

            modelBuilder.Entity("ReCommerce.Models.Troca", b =>
                {
                    b.HasOne("ReCommerce.Models.Produto", null)
                        .WithMany("Trocas")
                        .HasForeignKey("ProdutoId");

                    b.HasOne("ReCommerce.Models.Produto", "ProdutosUsuarioDois")
                        .WithOne()
                        .HasForeignKey("ReCommerce.Models.Troca", "ProdutosUsuarioDoisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReCommerce.Models.Produto", "ProdutosUsuarioUm")
                        .WithOne()
                        .HasForeignKey("ReCommerce.Models.Troca", "ProdutosUsuarioUmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReCommerce.Models.Usuario", "UsuarioDois")
                        .WithMany()
                        .HasForeignKey("UsuarioDoisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReCommerce.Models.Usuario", null)
                        .WithMany("Trocas")
                        .HasForeignKey("UsuarioId");

                    b.HasOne("ReCommerce.Models.Usuario", "UsuarioUm")
                        .WithMany()
                        .HasForeignKey("UsuarioUmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ReCommerce.Models.UsuarioEndereco", b =>
                {
                    b.HasOne("ReCommerce.Models.Endereco", "Endereco")
                        .WithMany("UsuarioEnderecos")
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReCommerce.Models.Usuario", "Usuario")
                        .WithMany("UsuarioEnderecos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ReCommerce.Models.UsuarioProduto", b =>
                {
                    b.HasOne("ReCommerce.Models.Produto", "Produto")
                        .WithMany("UsuarioProduto")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReCommerce.Models.Usuario", "Usuario")
                        .WithMany("UsuarioProdutos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
